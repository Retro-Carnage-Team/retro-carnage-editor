package net.retrocarnage.editor.gameplayeditor.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import net.retrocarnage.editor.gameplayeditor.impl.GamePlayEditorRepository;
import net.retrocarnage.editor.model.Mission;
import net.retrocarnage.editor.zoom.ZoomService;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.util.NbBundle.Messages;
import org.openide.util.lookup.AbstractLookup;
import org.openide.windows.TopComponent;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//net.retrocarnage.editor.gameplayeditor//GamePlayEditor//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "GamePlayEditorTopComponent",
        iconBase = "net/retrocarnage/editor/gameplayeditor/gui/accessories-text-editor.png",
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_GamePlayEditorAction=GamePlayEditor",
    "CTL_GamePlayEditorTopComponent=GamePlayEditor Window",
    "HINT_GamePlayEditorTopComponent=This is a GamePlayEditor window"
})
public final class GamePlayEditorTopComponent extends TopComponent implements PropertyChangeListener {

    private final GamePlayEditorController controller;

    public GamePlayEditorTopComponent() {
        this(null);
    }

    public GamePlayEditorTopComponent(final Mission mission) {
        controller = new GamePlayEditorController(mission);
        controller.addPropertyChangeListener(this);
        ZoomService.getDefault().addPropertyChangeListener(this);

        initComponents();

        setName(Bundle.CTL_GamePlayEditorTopComponent());
        setToolTipText(Bundle.HINT_GamePlayEditorTopComponent());

        associateLookup(new AbstractLookup(controller.getLookupContent()));
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code.
     *
     * The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrPane = new javax.swing.JScrollPane();
        lblGamePlayDisplay = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        scrPane.setViewportView(lblGamePlayDisplay);

        add(scrPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblGamePlayDisplay;
    private javax.swing.JScrollPane scrPane;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        final Mission mission = controller.getMission();
        if (null != mission) {
            GamePlayEditorRepository.INSTANCE.register(mission.getId(), this);
            this.setDisplayName(mission.getName());
        }
    }

    @Override
    public void componentClosed() {
        final Mission mission = controller.getMission();
        if (null != mission) {
            GamePlayEditorRepository.INSTANCE.unregister(mission.getId(), this);
        }
        ZoomService.getDefault().removePropertyChangeListener(this);
        controller.removePropertyChangeListener(this);
        controller.close();
    }

    void writeProperties(java.util.Properties p) {
        p.setProperty("version", "1.0");
    }

    void readProperties(java.util.Properties p) {
        // String version = p.getProperty("version");
    }

    @Override
    public void propertyChange(final PropertyChangeEvent pce) {
        if (GamePlayEditorController.PROPERTY_GAMEPLAY.equals(pce.getPropertyName())) {
            // TODO: Update the view
            System.out.println("GamePlayEditor has to be refreshed due to an external update");
        } else if (ZoomService.PROPERTY_ZOOM.equals(pce.getPropertyName())) {
            // TODO: Update the view
            System.out.println("GamePlayEditor has to be refreshed due to change of zoom level");
        }
    }
}
